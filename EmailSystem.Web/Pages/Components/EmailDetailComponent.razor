@using EmailSystem.Domain.Models
@using EmailSystem.Domain.Interfaces

@inject IUserService _userService

<EditForm Model="@newEmail">
    <div class="row">
        <InputText class="form-control form-control-lg email-subject" @bind-Value="@newEmail.Subject" placeholder="@email.Subject" disabled=@isReading></InputText>
    </div>
    <div class="row justify-content-between">

        <div class="col-9">
            <div class="row">
                <div class="col-1 pl-0 pr-2">
                    <img src="/Images/profile_picture.svg" style="width:5.5rem" />
                </div>
                <div class="col-3 ">
                    <div>
                        <span class="text-muted text-secondary">
                            From:
                            <InputText type="email" @bind-Value="@newEmail.Sender.Email" placeholder="@(isReading ? email.Sender.Email : email.Recipient.Email)" disabled></InputText>
                            
                        </span>
                    </div>
                    <div>
                        <span class="text-muted text-secondary">
                            For:
                            <InputText type="email" @bind-Value="@newEmail.Recipient.Email" placeholder="@(isReading ? email.Recipient.Email : email.Sender.Email)" disabled=@isReading></InputText>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-1">
            @if (isReading)
            {
                <button class="btn btn-outline-primary"><span class="oi oi-arrow-left" @onclick="SetReplyState"> Reply</span></button>

            }
            else
            { 
                <button class="btn btn-outline-primary"><span class="oi oi-arrow-right"  @onclick="SetSubmitState"> Send</span></button>
            }

        </div>
    </div>
    <hr />
    <div class="row mx-3 min-vh-100">
        <div class="col-12 flex-grow-1 d-flex flex-column">

            <InputTextArea class="flex-grow-1"  @bind-Value="@newEmail.Message" placeholder="@email.Message" disabled=@isReading></InputTextArea>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public EmailModel Email { get; set; }
    private EmailModel email;

    private EmailModel newEmail = new EmailModel() { Recipient = new ApplicationUser(), Sender = new ApplicationUser() };

    private bool isReading = true;
    private bool isSubmitting = false;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        email = Email;
    }

    private void HandleValidSubmit()
    {
        if (isSubmitting)
        {
            _userService.SendEmail(email.Recipient.Email, email.Sender.Email, newEmail.Subject, newEmail.Message);
        }
    }

    private void SetReplyState()
    {
        isReading = !isReading;
    }

    private void SetSubmitState()
    {
        isSubmitting = !isSubmitting;
        HandleValidSubmit();
    }
}