@using Microsoft.AspNetCore.Identity
@using EmailSystem.Domain.Models 
@using EmailSystem.Domain.Interfaces 

@inject UserManager<ApplicationUser> _userManager
@inject IUserService _userService 

@*<EditForm Model="@newEmail" OnValidSubmit="SendEmail">*@
    <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="row">
                        <div class="col-12">
                            @*<InputText @bind-Value="newEmail.Sender.Email" class="form-control" type="email" />*@
                        </div>
                        <div class="col-12">
                            @*<InputText @bind-Value="newEmail.Recipient.Email" class="form-control" type="email" placeholder="Recipent@email.com" />*@
                        </div>
                        <div class="col-12">
                            @*<InputText @bind-Value="newEmail.Subject" class="form-control" type="email" placeholder="Subject" />*@
                        </div>
                    </div>
                        <button type="button" class="btn btn-outline-primary" data-dismiss="modal" @onclick="() => Close()" aria-label="Send">
                            <span class="oi oi-arrow-right"> Send</span>
                        </button>
                </div>
                <div class="modal-body">

                    @*<InputTextArea @bind-Value="newEmail.Message" />*@

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Send</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Discard</button>
                </div>
            </div>
        </div>
    </div>
@*</EditForm>*@

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {


    //public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    private EmailModel newEmail = new EmailModel();
    [Parameter]
    public string UserEmail { get; set; } = "";
    private string userEmail = "";

    protected override void OnParametersSet()
    {
        userEmail = UserEmail;
        base.OnParametersSet();
    }

    public void SendEmail()
    {
        _userService.SendEmail(newEmail.Sender.Email, newEmail.Recipient.Email, newEmail);
        Close(); 
    }

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}